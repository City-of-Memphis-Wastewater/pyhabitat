# File: .github/workflows/publish.yml

name: Check and Publish Python Package to PyPI

# This workflow is triggered when a new Release is created and published on GitHub.
on:
  release:
    types: [published]

# This job builds the package and then publishes it using PyPI Trusted Publishing.
jobs:
  pypi-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest

    # RECOMMENDED: Use a deployment environment for security hardening (optional, but best practice).
    # You must create an environment named 'pypi' in your GitHub Repository Settings.
    environment: pypi
    
    # IMPORTANT: This permission is MANDATORY for PyPI Trusted Publishing (OIDC).
    # It allows the job to fetch an OpenID Connect (OIDC) token to authenticate with PyPI.
    permissions:
      id-token: write  # Needed for OIDC authentication
      contents: read   # Needed to check out the code

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # This fetches all history and tags,
          # allowing the 'build' command to correctly determine the version
          # based on the git tag (e.g., 'v1.1.0' or '1.1.0').
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies (for building)
        run: python -m pip install --upgrade pip build

      - name: Build S-Dist and Wheel
        # This command creates the package files (.tar.gz and .whl) in the 'dist/' directory.
        run: python -m build

      - name: Install built package
        # Install the package that was just built into the 'dist/' directory
        run: pip install dist/*.whl

      - name: Run tests
        # Run a command that would fail if the code is broken
        # This could be your pytest suite, or just a simple sanity check.
        run: |
          pyhabitat --debug
          # Or even better, if there are tests:
          # pip install pytest
          # pytest

      - name: Publish package distributions to PyPI
        # This action uses the OIDC token generated by the 'id-token: write' permission
        # to securely authenticate and upload the files in the 'dist/' directory to PyPI.
        uses: pypa/gh-action-pypi-publish@release/v1
        # No username or password/token is needed for Trusted Publishing!